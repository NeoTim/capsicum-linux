#!/usr/bin/env js

/* Provisional format:

   {fn: <function_name>, rights: [ "arg1right1|arg1right2", "arg2right1", ...]}
   eg:
   {fn: "sys_write", rights: [["WRITE","SEEK"]]}

*/

syscall_table = [
	{fn: "sys_write", rights: ["WRITE|SEEK"]},
	{fn: "sys_read", rights: ["READ|SEEK"]},
	{fn: "sys_close", rights: []},
	{fn: "sys_exit", rights: []},
	{fn: "sys_openat", rights: ["READ|WRITE"]},
	{fn: "sys_cap_new"},
];


// Generate the table!

out = "/*\n\
 * System call permission table for Capsicum, a capability API for UNIX.\n\
 *\n\
 * Copyright (C) 2012 The Chromium OS Authors <chromium-os-dev@chromium.org>\n\
 *\n\
 * This program is free software; you can redistribute it and/or modify\n\
 * it under the terms of the GNU General Public License version 2, as\n\
 * published by the Free Software Foundation.\n\
 *\n\
 * This file is generated by capsicum_table.js. It should not live in the\n\
 * repository in the long term: eventually, capsicum_table.js will be\n\
 * rewritten in Perl, and will be invoked automatically by the build system,\n\
 * and this file will be removed from the repository.\n\
 */\n\
\n\
static inline int run_syscall_table(void *call, unsigned long *args)\n\
{\n\n";

for(var i in syscall_table) {

	var spec = syscall_table[i];
	var first = true;

	out += "\tif (call == (void *)"+spec.fn+")\n\t\treturn ";

	for(var j in spec.rights) {
		var rstr = spec.rights[j];
		if (!rstr) { continue; }

		var r = rstr.split("|");

		for(var k in r) {
			r[k] = "CAP_" + r[k];
		}

		if(r) {
			out += (first?"":"\n\t\t\t|| ") + "require_rights(args["+j+"], "+r.join("|")+")";
			first = false;
		}
	}

	if (!spec.rights || spec.rights.length == 0) {
		out += "0";
	}

	out += ";\n\n";

}

out += "\treturn -ECAPMODE;\n";

out += "}\n";

f = new java.io.FileOutputStream("capsicum_syscall_table.h");
f.write(new java.lang.String(out).getBytes());
f.close();

